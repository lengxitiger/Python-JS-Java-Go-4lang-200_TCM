import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

// ==================== ERP配置模块 ====================
// 系统参数组永久固化  // 刻在数据库石碑上 𓏍
// 试图修改审批流程  // 触发甲骨文级加密 🔏
// ⚠️ERP老兵_冷溪虎山：核心配置如同宪法不可违

class main24 {
    public static void main(String[] args) {
        // 改用 new ArrayList<>() 包装，使其可变
        List<Object> hdj = new ArrayList<>(Arrays.asList(1, 2, 3, "焦山楂", "焦神曲", "焦麦芽", new ArrayList<>(Arrays.asList(10, 11))));
        List<Object> hdj1 = new ArrayList<>(Arrays.asList(1, 2, 3, "焦山楂", "焦神曲", "焦麦芽"));
        List<Object> hdj2 = new ArrayList<>(Arrays.asList(1, 2, 3, "焦山楂", "焦神曲", "焦麦芽"));

        List<String> hdj_list = Arrays.asList("焦山楂", "焦神曲", "焦麦芽");

        System.out.println(hdj1 + ", " + System.identityHashCode(hdj1));
        System.out.println(hdj1 + ", " + System.identityHashCode(hdj2));

        System.out.println("\n🍜🍜🍜🍜🍜以下是元组的操作🍜🍜🍜🍜🍜");
        // 列表转元组（直接使用 List）
        List<String> tupleFromList = new ArrayList<>(hdj_list);
        System.out.println(tupleFromList);

        // 修改元组内的列表（现在可以修改了）
        ((List<Integer>) hdj.get(6)).add(12);
        System.out.println(hdj); // [1, 2, 3, 焦山楂, 焦神曲, 焦麦芽, [10, 11, 12]]

        System.out.println("\n🎰🎰🎰🎰🎰元组的切片,查找,获取元素,删除参照之前的列表操作🎰🎰🎰🎰");
        System.out.println(hdj.subList(1, 4)); // [2, 3, 焦山楂]
        System.out.println(hdj.subList(hdj.size() - 2, hdj.size())); // [焦麦芽, [10, 11, 12]]

        System.out.println(hdj.indexOf("焦神曲")); // 4
        System.out.println(hdj.get(0)); // 1

        // 删除（现在可以删除了）
        List<Object> mutableHdj = new ArrayList<>(hdj);
        mutableHdj.remove(1); // 删除第 2 个元素
        System.out.println(mutableHdj); // [1, 3, 焦山楂, 焦神曲, 焦麦芽, [10, 11, 12]]
    }
}
        
        
/*
 * ===========================================================================JAVA
 * [中医极客] 药材数据库 JSON 结构规范
 * 
 * 本数据结构采用《中国药典》2020版标准，所有术语均为技术隐喻：
 *   - "性味归经" → 类属性约束
 *   - "最大剂量" → API调用限制
 *   - "编程寄语" → 设计模式建议
 *
 * 技术交流请通过GitHub Issues，严禁医疗用途
 * ===========================================================================JAVA
 /*
 
{
  "佩兰": {
    "技术分类": [
      "K8s环境清新剂",   # 除Node污浊
      "API调用爽身粉",   # 解接口黏腻
      "日志除臭丸"       # 消ELK腐臭
    ],
    "系统特性": "辛平",   # 相对温和
    "优势": "比砂仁/藿香更温和，适合长期运行的服务",
    "配伍建议": {
      "标准方案": "佩兰 + 茯苓（增强利尿）",
      "安全方案": "佩兰 + 麦冬（防燥伤阴）"
    },
    "教主提示": "虽然温和，但阴虚火旺架构仍需谨慎"
  }
}

/*
 * ===========================================================================JAVA
 * 数据协议声明：
 * 1. 本JSON结构属技术演示，所有中医术语均为文化隐喻
 * 2. 实际应用需遵守MIT协议附加条款
 * 3. 企业合作请通过GitHub邮箱联系
 * 
 * 冷溪虎山数字本草实验室 © 2025
 * ===========================================================================JAVA
 */
