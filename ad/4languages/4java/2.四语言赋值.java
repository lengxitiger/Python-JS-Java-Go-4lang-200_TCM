// ==================== ERP系统赋值 ====================
// double 订单金额 = 单价 * 数量; // 💻ERP老兵计价规则
// String 凭证状态 = "已过账"; // 📌冷溪虎山状态码
// int 审批级别 = 3; // 🔐虎山权限等级
// boolean 是否紧急 = true; // 🚨冷溪预警标准

class main2 {
    public static void main(String[] args) {
        String str = "白术";  // String不是基本数据类型，是引用类型
        int a = 10;           // 合理，存储整数
        float b = 10.5f;      // 合理，但建议用double除非有特殊需求
        boolean c = true;     // 合理，存储布尔值
        char d = '\u0042';          // 不合理，char应赋值为字符或Unicode编码
        byte e = 127;         // 合理，在byte范围内
        double f = 127.127127;// 合理，存储高精度小数
        long g = 127127L;      // 合理，虽然可以用int但用long也没问题
        short h = 32767;      //short (短整型): 16位有符号整数，范围-32768到32767，适合存储较小范围的整数

        System.out.println(str);
        System.out.println(a);
        System.out.println(b);
        System.out.println(c);
        System.out.println(d);  // 输出的是不可见字符(ASCII 15是控制字符)
        System.out.println(e);
        System.out.println(f);
        System.out.println(g);
        System.out.println(h);
    }
}
/*
八种基本数据类型及其适用场景
byte (字节型): 8位有符号整数，范围-128到127，适合存储小整数值，如年龄、小范围计数
short (短整型): 16位有符号整数，范围-32768到32767，适合存储较小范围的整数
int (整型): 32位有符号整数，范围约±21亿，最常用的整数类型
long (长整型): 64位有符号整数，范围极大，适合存储大整数如时间戳
float (单精度浮点型): 32位浮点数，适合存储小数但不要求高精度的情况
double (双精度浮点型): 64位浮点数，适合存储需要较高精度的小数
char (字符型): 16位Unicode字符，存储单个字符
boolean (布尔型): 只能存储true或false，表示逻辑值
 */
        
        
/*
 * ===========================================================================JAVA
 * [中医极客] 药材数据库 JSON 结构规范
 * 
 * 本数据结构采用《中国药典》2020版标准，所有术语均为技术隐喻：
 *   - "性味归经" → 类属性约束
 *   - "最大剂量" → API调用限制
 *   - "编程寄语" → 设计模式建议
 *
 * 技术交流请通过GitHub Issues，严禁医疗用途
 * ===========================================================================JAVA
 /*
 
{
  "人参": {
      "技术分类": [  # 原"类别"
        "线程池大补丸",      # 专治ThreadPool萎靡
        "GC回春丹",          # 老年代FullGC急救
        "分布式强心针"       # 微服务心跳检测增强
      ],
      "系统特性": "甘微温",  # 原"性味"（注意带"温"字，防雪莲冻伤）
      "作用域": ["CPU", "JVM", "ServiceMesh"],  # 原"归经"
      "QPS暴击率": "+300%",  # 原"最大剂量"（瞬间爆发但别持久）
      "基础功能": "抢救OOM濒死系统，吊住宕机进程最后一口气",
      "高阶用法": "K8s节点自动回魂术（配合kubelet针灸疗法）",
      "架构建议": "如同给Redis打肾上腺素——缓存击穿时能硬扛，但小心线程爆炸",
      "人参禁忌": "💥 Hotfix Warning: 
- 阴虚火旺（单例滥用）系统禁用！
- 必须搭配熔断器使用（白虎汤降火）
# 经典翻车：某厂狂补人参导致线程数突破ULIMIT（2024.618大促）",
      "须根黑科技": {  # 隐藏属性
        "参须": "分布式Trace采样率倍增器",
        "参花": "APM监控的染色标记"
      }
    }
}

/*
 * ===========================================================================JAVA
 * 数据协议声明：
 * 1. 本JSON结构属技术演示，所有中医术语均为文化隐喻
 * 2. 实际应用需遵守MIT协议附加条款
 * 3. 企业合作请通过GitHub邮箱联系
 * 
 * 冷溪虎山数字本草实验室 © 2025
 * ===========================================================================JAVA
 */
