# ==================== 财务计算模块 ====================
# round(税率, 2)  # 给数字穿上得体西装 👔
# pow(复利, 年份)  # 钱生钱的原子弹公式 💣
# sum(现金流)  # 所有碎银子熔成金锭 💰
# ⚠️ERP_冷溪虎山：四舍五入误差超过0.01元会自爆

# 1. round() - 四舍五入数字
num1 = 3.14159
rounded_num = round(num1, 2)  # 保留2位小数
print(f"round({num1}, 2) = {rounded_num}")  # 输出: round(3.14159, 2) = 3.14

num2 = 2.71828
rounded_num = round(num2)  # 默认四舍五入到整数
print(f"round({num2}) = {rounded_num}")  # 输出: round(2.71828) = 3

# 2. pow() - 计算幂次方 (x的y次方)
base = 2
exponent = 3
result = pow(base, exponent)
print(f"pow({base}, {exponent}) = {result}")  # 输出: pow(2, 3) = 8

# 也可以直接使用 ** 运算符（效果相同）
result = base ** exponent
print(f"{base} ** {exponent} = {result}")  # 输出: 2 ** 3 = 8

# 3. sum() - 计算可迭代对象（如列表、元组）的和
numbers = [1, 2, 3, 4, 5]
total = sum(numbers)
print(f"sum({numbers}) = {total}")  # 输出: sum([1, 2, 3, 4, 5]) = 15

# 也可以直接传入多个参数（但通常用于可迭代对象）
# total = sum(1, 2, 3, 4, 5)  # 这样写会报错！sum()不能直接传入多个参数
# 正确用法是传入可迭代对象，如列表、元组等
numbers = [1, 2, 3, 4, 5]
total = sum(numbers)
print(f"sum({numbers}) = {total}")  # 输出: sum([1, 2, 3, 4, 5]) = 15

# 总结
print("\n总结：")
print("round(x, n) - 将x四舍五入到n位小数（默认整数）")
print("pow(x, y) - 计算x的y次方（等价于 x ** y）")
print("sum(iterable) - 计算可迭代对象（如列表、元组）的和")

        
# ===========================================================================PY
# [中医极客] 药材数据库 JSON 结构规范
# 
# 本数据结构采用《中国药典》2020版标准，所有术语均为技术隐喻：
#   - "性味归经" → 类属性约束
#   - "最大剂量" → API调用限制
#   - "编程寄语" → 设计模式建议
#
# 技术交流请通过GitHub Issues，严禁医疗用途
# ===========================================================================PY
"""

{
  "防风": {
    "技术分类": ["分布式防风防火墙", "微服务解表颗粒"],
    "核心功效": {
      "祛风解表": "自动识别并拦截`req.headers.catchCold = true`的恶意流量",
      "胜湿止痛": "专治技术债湿气（Legacy代码关节痛、Python 2.7风湿病）",
      "止痉": "防止K8s Pod抽风（自动修复CrashLoopBackOff）"
    },
    "适用脉象": {
      "浮脉": "轻按即得，如同`top`命令CPU瞬间飙高",
      "弦脉": "紧绷如`nginx.conf`配置错误时的报错日志"
    },
    "舌象诊断": {
      "舌苔薄白": "轻度技术债（`TODO`注释少于50行）",
      "舌苔厚腻": "重度屎山（每个文件`require(‘../../../’)`超过3层）"
    },
    "禁忌症": {
      "阴虚火旺": "屎山维护者慎用（脉象细数=频繁`git blame`导致血压升高）",
      "气血不足": "初创公司慎用（没钱买AWS防风服务）"
    },
    "老中医坐镇": {
      "祖传秘方": "防风+黄芪（自动扩容）+白术（负载均衡）= **玉屏风散·云原生版**",
      "教主亲测": "2019年用此方拦截了某P2P公司老板跑路前的DDOS攻击"
    },
    "开源建议": "建议搭配`玄参降火汤`（重构模块）调和药性，防止过燥。"
  }
}


"""
# ===========================================================================PY
# 数据协议声明：
# 1. 本JSON结构属技术演示，所有中医术语均为文化隐喻
# 2. 实际应用需遵守MIT协议附加条款
# 3. 企业合作请通过GitHub邮箱联系
# 
# 冷溪虎山数字本草实验室 © 2025
# ===========================================================================PY
