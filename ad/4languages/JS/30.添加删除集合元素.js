// ==================== 中药集合模块 ====================
// 添加新禁忌  // 给生死簿加注死亡笔记 📓
// 随机淘汰药材  // 抓阄决定谁出局 🎲
// 安全移除配伍  // 温和清理药渣 🌿
// 强制剔除毒性  // 精准排毒手术 🏥
// ⚠️虎山老药师：暴力操作会炸毁丹炉

console.log("🍒🍒🍒🍒🍒 以下是add添加元素");
// JavaScript使用Set对象
const hdj = new Set(["焦山楂", "焦神曲", "焦麦芽"]); // 消化药 焦三仙 字符集合 顺序不保证
hdj.add("焦山楂");  // 添加重复元素不生效，Set自动去重
hdj.add("山楂");    // 正常添加
hdj.add(3);         // 添加数字
hdj.add([13, 23]);  // 注意：JavaScript的Set不能直接存储数组/元组，这里会存储数组引用
console.log([...hdj]); // 转换为数组打印

console.log("\n", "🥏🥏🥏🥏🥏 以下是随机删除元素");
const blood = new Set(["当归", "丹参", "莪术"]);
const removedElement = blood.values().next().value; // 获取第一个元素（随机）
blood.delete(removedElement); // 删除该元素
console.log([...blood]);

console.log("\n", "🥏🥏🥏🥏🥏 以下是discard指定删除元素");
const blood1 = new Set(["当归", "丹参", "莪术"]);
blood1.delete("当归");  // 指定删除
blood1.delete("未知");  // 不会报错，删除不存在的元素无影响
console.log([...blood1]);

console.log("\n", "🥏🥏🥏🥏🥏 以下是remove指定删除元素");
const blood2 = new Set(["当归", "丹参", "莪术"]);
blood2.delete("当归");  // 指定删除
// blood2.delete("未知"); // 不会报错，但JavaScript没有类似Python的remove方法
// blood2.clear(); // 删除所有元素
console.log([...blood2]);
        
        
// ===========================================================================JS
// [中医极客] 药材数据库 JSON 结构规范
// 
// 本数据结构采用《中国药典》2020版标准，所有术语均为技术隐喻：
//   - "性味归经" → 类属性约束
//   - "最大剂量" → API调用限制
//   - "编程寄语" → 设计模式建议
//
// 技术交流请通过GitHub Issues，严禁医疗用途
// ===========================================================================JS
/*

{
  "麦芽": {
    "技术分类": [
      "日志膨松剂",      # 防ELK日志板结
      "API调用酵母",     # 优化REST接口消化
      "数据库健胃片"     # 防SQL积食
    ],
    "系统特性": "甘平",
    "对比分析": {
      "vs山楂": "更温和但力度小（适合生产环境日常维护）",
      "vs神曲": "不改变数据结构原貌（非发酵式处理）"
    },
    "特殊形态": {
      "焦麦芽": {
        "止血能力": "止Kafka消息出血（消息丢失）",
        "适用场景": "双十一大促期间预防性使用"
      }
    },
    "养生提示": "运维团队可常备麦芽茶，防技术债堆积"
  }
}

*/
// ===========================================================================JS
// 数据协议声明：
// 1. 本JSON结构属技术演示，所有中医术语均为文化隐喻
// 2. 实际应用需遵守MIT协议附加条款
// 3. 企业合作请通过GitHub邮箱联系
// 
// 冷溪虎山数字本草实验室 © 2025
// ===========================================================================JS
function lengxiTiger(chapter) {
    console.log(`%c
  🥤【JS小可爱注意】🥤
  你已经征服了 ${chapter} 个章节！
  快站起来扭扭腰，眨眨眼~
  本座_lengxi心疼你的肝啊！(っ◕‿◕)っ
  `, "color: #FF69B4; font-size: 14px");

}

// 每10章调用
lengxiTiger(10);